fixture FbxObjectTest
test FbxObject_Create_HasZeroProperties
    given
    FbxObject obj = new("")

    then
    AssertEqual(0, CountProperties(obj))
    AssertEqual(0, obj.GetSrcPropertyCount())
    AssertEqual(0, obj.GetDstPropertyCount())

test FbxObject_Create_HasRootProperty
    given
    FbxObject obj = new("")

    then
#cs AssertNotNull(&obj.RootProperty)
    AssertTrue((&obj.RootProperty).IsValid())
    AssertEqual("", obj.RootProperty&.GetName())

test FbxObject_Create_HasClassRootProperty
    given
    FbxObject obj = new("")

    then
#cs AssertNotNull(obj.GetClassRootProperty())
    AssertTrue(obj.GetClassRootProperty()&.IsValid())

// what do class root properties do in the case of inheritance?
// does FbxSurfacePhong have its own class root property and FbxSurfaceLambert another?

test FbxObject_GetName_GetsName
    given
    FbxObject obj = new("asdf")

    then
    AssertEqual("asdf", obj.GetName())

test FbxObject_SetName_SetsName
    given
    FbxObject obj = new("asdf")

    when
    obj.SetName("qwer")

    then
    AssertEqual("qwer", obj.GetName())

test FbxObject_Create_EmptyNamespace
    given
    FbxObject obj = new("asdf")

    then
    AssertEqual("", obj.GetNameSpaceOnly())

test FbxObject_SetNameSpace_SetsNamespace
    given
    FbxObject obj = new("asdf")

    when
    obj.SetNameSpace("qwer")

    then
    AssertEqual("qwer", obj.GetNameSpaceOnly())

test FbxObject_GetNameSpaceArray_SplitsNamespace
    given
    FbxObject obj = new("asdf")
    obj.SetNameSpace("name:space")
    FbxArray<FbxString*> arr

    when
    arr = obj.GetNameSpaceArray(':')

    then
    AssertEqual(2, arr&.GetCount())
    AssertEqual("space", *arr&.GetAt(0))
    AssertEqual("name", *arr&.GetAt(1))

    when
    arr = obj.GetNameSpaceArray('s')

    then
    AssertEqual(2, arr&.GetCount())
    AssertEqual("pace", *arr&.GetAt(0))
    AssertEqual("name:", *arr&.GetAt(1))

    when
    arr = obj.GetNameSpaceArray('a')

    then
    AssertEqual(3, arr&.GetCount())
    AssertEqual("ce", *arr&.GetAt(0))
    AssertEqual("me:sp", *arr&.GetAt(1))
    AssertEqual("n", *arr&.GetAt(2))

test FbxObject_Create_SetsInitialName
    given
    FbxObject obj = new("asdf")

    require
    AssertEqual("asdf", obj.GetName())

    then
    AssertEqual("asdf", obj.GetInitialName())

test FbxObject_SetName_DoesntChangeInitialName
    given
    FbxObject obj = new("asdf")

    require
    AssertEqual("asdf", obj.GetInitialName())
    AssertEqual("asdf", obj.GetName())

    when
    obj.SetName("qwer")

    then
    AssertEqual("asdf", obj.GetInitialName())
    AssertEqual("qwer", obj.GetName())

test FbxObject_SetInitialName_SetsInitialNameAndName
    given
    FbxObject obj = new("asdf")

    require
    AssertEqual("asdf", obj.GetInitialName())
    AssertEqual("asdf", obj.GetName())

    when
    obj.SetInitialName("qwer")

    then
    AssertEqual("qwer", obj.GetInitialName())
    AssertEqual("qwer", obj.GetName())

test FbxObject_Create_HasNamespacePrefix
    given
    FbxObject obj = new("asdf")

    then
    AssertEqual("", obj.GetNameSpacePrefix())

test FbxObject_GetNameOnly_GetsNameWithoutNamespacePrefix
    given
    FbxObject obj = new("asdf")

    require
    AssertEqual("asdf", obj.GetName())

    then
    AssertEqual("asdf", obj.GetNameOnly())

test FbxObject_SetNameSpaceAndGetNameOnly_FirstCharacterIsMissing
    given
    FbxObject obj = new("asdf")
    obj.SetNameSpace("qwer")

    require
    AssertEqual("asdf", obj.GetName())
    AssertEqual("qwer", obj.GetNameSpaceOnly())

    then
    AssertEqual("sdf", obj.GetNameOnly())

test FbxObject_SetNameSpaceThenSetName_FirstCharacterIsStillMissing
    given
    FbxObject obj = new("asdf")
    obj.SetNameSpace("qwer")

    require
    AssertEqual("asdf", obj.GetName())
    AssertEqual("qwer", obj.GetNameSpaceOnly())

    when
    obj.SetName("zxcv")

    then
    AssertEqual("asdf", obj.GetInitialName())
    AssertEqual("zxcv", obj.GetName())
    AssertEqual("xcv", obj.GetNameOnly())

test FbxObject_SetNameSpaceThenSetInitialName_FirstCharacterIsStillMissing
    given
    FbxObject obj = new("asdf")
    obj.SetNameSpace("qwer")

    require
    AssertEqual("asdf", obj.GetName())
    AssertEqual("qwer", obj.GetNameSpaceOnly())

    when
    obj.SetInitialName("zxcv")

    then
    AssertEqual("zxcv", obj.GetInitialName())
    AssertEqual("zxcv", obj.GetName())
    AssertEqual("xcv", obj.GetNameOnly())

test FbxObject_GetNameWithoutNameSpacePrefix_GetsNameWithoutNamespacePrefix
    given
    FbxObject obj = new("asdf")

    require
    AssertEqual("asdf", obj.GetName())

    then
    AssertEqual("asdf", obj.GetNameWithoutNameSpacePrefix())

test FbxObject_SetNameSpaceAndGetNameWithoutNameSpacePrefix_FirstCharacterIsNotMissing
    given
    FbxObject obj = new("asdf")
    obj.SetNameSpace("qwer")

    require
    AssertEqual("asdf", obj.GetName())
    AssertEqual("qwer", obj.GetNameSpaceOnly())

    then
    AssertEqual("asdf", obj.GetNameWithoutNameSpacePrefix())

test FbxObject_GetNameWithoutNameSpacePrefix_GetsNameWithNamespacePrefix
    given
    FbxObject obj = new("asdf")

    require
    AssertEqual("asdf", obj.GetName())

    then
    AssertEqual("asdf", obj.GetNameWithNameSpacePrefix())

test FbxObject_SetNameSpaceAndGetNameWithoutNameSpacePrefix_IncludesNamespace
    given
    FbxObject obj = new("asdf")
    obj.SetNameSpace("qwer")

    require
    AssertEqual("asdf", obj.GetName())
    AssertEqual("qwer", obj.GetNameSpaceOnly())

    then
    AssertEqual("asdf", obj.GetNameWithNameSpacePrefix())

/////////////////////////////

test Mesh_GetNameOnly_GetsNameWithoutNamespacePrefix
    given
    FbxMesh obj = new("asdf")

    require
    AssertEqual("asdf", obj.GetName())

    then
    AssertEqual("asdf", obj.GetNameOnly())

test Mesh_SetNameSpaceAndGetNameOnly_FirstCharacterIsMissing
    given
    FbxMesh obj = new("asdf")
    obj.SetNameSpace("qwer")

    require
    AssertEqual("asdf", obj.GetName())
    AssertEqual("qwer", obj.GetNameSpaceOnly())

    then
    AssertEqual("sdf", obj.GetNameOnly())

test Mesh_SetNameSpaceThenSetName_FirstCharacterIsStillMissing
    given
    FbxMesh obj = new("asdf")
    obj.SetNameSpace("qwer")

    require
    AssertEqual("asdf", obj.GetName())
    AssertEqual("qwer", obj.GetNameSpaceOnly())

    when
    obj.SetName("zxcv")

    then
    AssertEqual("asdf", obj.GetInitialName())
    AssertEqual("zxcv", obj.GetName())
    AssertEqual("xcv", obj.GetNameOnly())

test Mesh_SetNameSpaceThenSetInitialName_FirstCharacterIsStillMissing
    given
    FbxMesh obj = new("asdf")
    obj.SetNameSpace("qwer")

    require
    AssertEqual("asdf", obj.GetName())
    AssertEqual("qwer", obj.GetNameSpaceOnly())

    when
    obj.SetInitialName("zxcv")

    then
    AssertEqual("zxcv", obj.GetInitialName())
    AssertEqual("zxcv", obj.GetName())
    AssertEqual("xcv", obj.GetNameOnly())

test Mesh_GetNameWithoutNameSpacePrefix_GetsNameWithoutNamespacePrefix
    given
    FbxMesh obj = new("asdf")

    require
    AssertEqual("asdf", obj.GetName())

    then
    AssertEqual("asdf", obj.GetNameWithoutNameSpacePrefix())

test Mesh_SetNameSpaceAndGetNameWithoutNameSpacePrefix_FirstCharacterIsNotMissing
    given
    FbxMesh obj = new("asdf")
    obj.SetNameSpace("qwer")

    require
    AssertEqual("asdf", obj.GetName())
    AssertEqual("qwer", obj.GetNameSpaceOnly())

    then
    AssertEqual("asdf", obj.GetNameWithoutNameSpacePrefix())

test Mesh_GetNameWithoutNameSpacePrefix_GetsNameWithNamespacePrefix
    given
    FbxMesh obj = new("asdf")

    require
    AssertEqual("asdf", obj.GetName())
    AssertEqual("Geometry:\:", obj.GetNameSpacePrefix())

    then
    AssertEqual("Geometry:\:asdf", obj.GetNameWithNameSpacePrefix())

test Mesh_SetNameSpaceAndGetNameWithoutNameSpacePrefix_IncludesNamespace
    given
    FbxMesh obj = new("asdf")
    obj.SetNameSpace("qwer")

    require
    AssertEqual("asdf", obj.GetName())
    AssertEqual("qwer", obj.GetNameSpaceOnly())
    AssertEqual("Geometry:\:", obj.GetNameSpacePrefix())

    then
    AssertEqual("Geometry:\:asdf", obj.GetNameWithNameSpacePrefix())

////////////////////////

test Mesh_SetNameUsingColons_IncludesNamespace
    given
    FbxMesh obj = new("asdf:\:Something|zxcv|qwer")

    then
    AssertEqual("asdf:\:Something|zxcv|qwer", obj.GetName())
    AssertEqual("", obj.GetNameSpaceOnly())
    AssertEqual("Geometry:\:", obj.GetNameSpacePrefix())
    AssertEqual("Geometry:\:asdf:\:Something|zxcv|qwer", obj.GetNameWithNameSpacePrefix())

test Mesh_SetNameUsingColonsandSetNameSpace_IncludesNamespace
    given
    FbxMesh obj = new("asdf:\:Something|zxcv|qwer")
    obj.SetNameSpace("uiop:\:hjkl|cvbn|dfgh");

    then
    AssertEqual("asdf:\:Something|zxcv|qwer", obj.GetName())
    AssertEqual("uiop:\:hjkl|cvbn|dfgh", obj.GetNameSpaceOnly())
    AssertEqual("Geometry:\:", obj.GetNameSpacePrefix())
    AssertEqual("Geometry:\:asdf:\:Something|zxcv|qwer", obj.GetNameWithNameSpacePrefix())

////////////////////////

test FbxObject_RemovePrefix_RemovesAllPrefix
    then
    AssertEqual("four", FbxObject::RemovePrefix("one:\:two:\:three:\:four"))

test FbxObject_StripPrefix_RemovesFirstPrefix
    then
    AssertEqual("two:\:three:\:four", FbxObject::StripPrefix("one:\:two:\:three:\:four"))

////////////////////////

test FbxObject_TypedGetSrcObjectCount_GetsCountOfObjectsOfThatType
    given
    FbxObject obj = new("asdf")
    FbxMesh mesh1 = new("mesh1")
    FbxMesh mesh2 = new("mesh2")
    FbxNode node = new("node")
    FbxMesh mesh3 = new("mesh3")
    FbxLight light = new("light")
    obj.ConnectSrcObject(mesh1)
    obj.ConnectSrcObject(mesh2)
    obj.ConnectSrcObject(node)
    obj.ConnectSrcObject(mesh3)
    obj.ConnectSrcObject(light)

    require
    AssertEqual(5, obj.GetSrcObjectCount())
    AssertSame(mesh1, obj.GetSrcObject(0))
    AssertSame(mesh2, obj.GetSrcObject(1))
    AssertSame(node, obj.GetSrcObject(2))
    AssertSame(mesh3, obj.GetSrcObject(3))
    AssertSame(light, obj.GetSrcObject(4))

    then
    AssertEqual(3, obj.GetSrcObjectCount<FbxMesh>())
    AssertEqual(1, obj.GetSrcObjectCount<FbxNode>())
    AssertEqual(1, obj.GetSrcObjectCount<FbxLight>())
    AssertEqual(4, obj.GetSrcObjectCount<FbxNodeAttribute>())

test FbxObject_TypedGetSrcObject_GetsObjectOfThatType
    given
    FbxObject obj = new("asdf")
    FbxMesh mesh1 = new("mesh1")
    FbxMesh mesh2 = new("mesh2")
    FbxNode node = new("node")
    FbxMesh mesh3 = new("mesh3")
    FbxLight light = new("light")
    obj.ConnectSrcObject(mesh1)
    obj.ConnectSrcObject(mesh2)
    obj.ConnectSrcObject(node)
    obj.ConnectSrcObject(mesh3)
    obj.ConnectSrcObject(light)

    require
    AssertEqual(5, obj.GetSrcObjectCount())
    AssertSame(mesh1, obj.GetSrcObject(0))
    AssertSame(mesh2, obj.GetSrcObject(1))
    AssertSame(node, obj.GetSrcObject(2))
    AssertSame(mesh3, obj.GetSrcObject(3))
    AssertSame(light, obj.GetSrcObject(4))

    AssertEqual(3, obj.GetSrcObjectCount<FbxMesh>())
    AssertEqual(1, obj.GetSrcObjectCount<FbxNode>())
    AssertEqual(1, obj.GetSrcObjectCount<FbxLight>())
    AssertEqual(4, obj.GetSrcObjectCount<FbxNodeAttribute>())

    then
    AssertSame(mesh1, obj.GetSrcObject<FbxMesh>())
    AssertSame(mesh1, obj.GetSrcObject<FbxMesh>(0))
    AssertSame(mesh2, obj.GetSrcObject<FbxMesh>(1))
    AssertSame(mesh3, obj.GetSrcObject<FbxMesh>(2))
    AssertSame(node, obj.GetSrcObject<FbxNode>())
    AssertSame(node, obj.GetSrcObject<FbxNode>(0))
    AssertSame(light, obj.GetSrcObject<FbxLight>())
    AssertSame(light, obj.GetSrcObject<FbxLight>(0))
    AssertSame(mesh1, obj.GetSrcObject<FbxNodeAttribute>())
    AssertSame(mesh1, obj.GetSrcObject<FbxNodeAttribute>(0))
    AssertSame(mesh2, obj.GetSrcObject<FbxNodeAttribute>(1))
    AssertSame(mesh3, obj.GetSrcObject<FbxNodeAttribute>(2))
    AssertSame(light, obj.GetSrcObject<FbxNodeAttribute>(3))

    AssertEqual(null, obj.GetSrcObject<FbxCamera>(0))

test FbxObject_TypedDisconnectAllSrcObject_DisconnectsAllSrcObjectOfThatType
    given
    FbxObject obj = new("asdf")
    FbxMesh mesh1 = new("mesh1")
    FbxNode node = new("node")
    FbxMesh mesh2 = new("mesh2")
    obj.ConnectSrcObject(mesh1)
    obj.ConnectSrcObject(node)
    obj.ConnectSrcObject(mesh2)

    require
    AssertEqual(3, obj.GetSrcObjectCount())
    AssertSame(mesh1, obj.GetSrcObject(0))
    AssertSame(node, obj.GetSrcObject(1))
    AssertSame(mesh2, obj.GetSrcObject(2))

    AssertEqual(2, obj.GetSrcObjectCount<FbxMesh>())
    AssertEqual(1, obj.GetSrcObjectCount<FbxNode>())

    AssertEqual(1, mesh1.GetDstObjectCount())
    AssertEqual(1, node.GetDstObjectCount())
    AssertEqual(1, mesh2.GetDstObjectCount())

    when
    bool ret = obj.DisconnectAllSrcObject<FbxMesh>()

    then
    AssertTrue(ret)
    AssertEqual(1, obj.GetSrcObjectCount())
    AssertSame(node, obj.GetSrcObject())
    AssertSame(node, obj.GetSrcObject(0))

    AssertEqual(0, obj.GetSrcObjectCount<FbxMesh>())

    AssertEqual(1, obj.GetSrcObjectCount<FbxNode>())
    AssertSame(node, obj.GetSrcObject<FbxNode>())
    AssertSame(node, obj.GetSrcObject<FbxNode>(0))

    AssertEqual(0, mesh1.GetDstObjectCount())
    AssertEqual(1, node.GetDstObjectCount())
    AssertEqual(0, mesh2.GetDstObjectCount())

test FbxObject_TypedDisconnectAllSrcObjectWithInheritance_DisconnectsAllSrcObjectOfThatType
    given
    FbxObject obj = new("asdf")
    FbxMesh mesh1 = new("mesh1")
    FbxNode node = new("node")
    FbxLight light = new("light")
    obj.ConnectSrcObject(mesh1)
    obj.ConnectSrcObject(node)
    obj.ConnectSrcObject(light)

    require
    AssertEqual(3, obj.GetSrcObjectCount())
    AssertSame(mesh1, obj.GetSrcObject(0))
    AssertSame(node, obj.GetSrcObject(1))
    AssertSame(light, obj.GetSrcObject(2))

    AssertEqual(1, obj.GetSrcObjectCount<FbxMesh>())
    AssertEqual(1, obj.GetSrcObjectCount<FbxNode>())
    AssertEqual(1, obj.GetSrcObjectCount<FbxLight>())
    AssertEqual(2, obj.GetSrcObjectCount<FbxNodeAttribute>())

    AssertEqual(1, mesh1.GetDstObjectCount())
    AssertEqual(1, node.GetDstObjectCount())
    AssertEqual(1, light.GetDstObjectCount())

    when
    bool ret = obj.DisconnectAllSrcObject<FbxNodeAttribute>()

    then
    AssertTrue(ret)
    AssertEqual(1, obj.GetSrcObjectCount())
    AssertSame(node, obj.GetSrcObject())
    AssertSame(node, obj.GetSrcObject(0))

    AssertEqual(0, obj.GetSrcObjectCount<FbxMesh>())
    AssertEqual(0, obj.GetSrcObjectCount<FbxLight>())
    AssertEqual(0, obj.GetSrcObjectCount<FbxNodeAttribute>())

    AssertEqual(1, obj.GetSrcObjectCount<FbxNode>())
    AssertSame(node, obj.GetSrcObject<FbxNode>())
    AssertSame(node, obj.GetSrcObject<FbxNode>(0))

    AssertEqual(0, mesh1.GetDstObjectCount())
    AssertEqual(1, node.GetDstObjectCount())
    AssertEqual(0, light.GetDstObjectCount())

test FbxObject_TypedGetDstObjectCount_GetsCountOfObjectsOfThatType
    given
    FbxObject obj = new("asdf")
    FbxMesh mesh1 = new("mesh1")
    FbxMesh mesh2 = new("mesh2")
    FbxNode node = new("node")
    FbxMesh mesh3 = new("mesh3")
    FbxLight light = new("light")
    obj.ConnectDstObject(mesh1)
    obj.ConnectDstObject(mesh2)
    obj.ConnectDstObject(node)
    obj.ConnectDstObject(mesh3)
    obj.ConnectDstObject(light)

    require
    AssertEqual(5, obj.GetDstObjectCount())
    AssertSame(mesh1, obj.GetDstObject(0))
    AssertSame(mesh2, obj.GetDstObject(1))
    AssertSame(node, obj.GetDstObject(2))
    AssertSame(mesh3, obj.GetDstObject(3))
    AssertSame(light, obj.GetDstObject(4))

    then
    AssertEqual(3, obj.GetDstObjectCount<FbxMesh>())
    AssertEqual(1, obj.GetDstObjectCount<FbxNode>())
    AssertEqual(1, obj.GetDstObjectCount<FbxLight>())
    AssertEqual(4, obj.GetDstObjectCount<FbxNodeAttribute>())

test FbxObject_TypedGetDstObject_GetsObjectOfThatType
    given
    FbxObject obj = new("asdf")
    FbxMesh mesh1 = new("mesh1")
    FbxMesh mesh2 = new("mesh2")
    FbxNode node = new("node")
    FbxMesh mesh3 = new("mesh3")
    FbxLight light = new("light")
    obj.ConnectDstObject(mesh1)
    obj.ConnectDstObject(mesh2)
    obj.ConnectDstObject(node)
    obj.ConnectDstObject(mesh3)
    obj.ConnectDstObject(light)

    require
    AssertEqual(5, obj.GetDstObjectCount())
    AssertSame(mesh1, obj.GetDstObject(0))
    AssertSame(mesh2, obj.GetDstObject(1))
    AssertSame(node, obj.GetDstObject(2))
    AssertSame(mesh3, obj.GetDstObject(3))
    AssertSame(light, obj.GetDstObject(4))

    AssertEqual(3, obj.GetDstObjectCount<FbxMesh>())
    AssertEqual(1, obj.GetDstObjectCount<FbxNode>())
    AssertEqual(1, obj.GetDstObjectCount<FbxLight>())
    AssertEqual(4, obj.GetDstObjectCount<FbxNodeAttribute>())

    then
    AssertSame(mesh1, obj.GetDstObject<FbxMesh>())
    AssertSame(mesh1, obj.GetDstObject<FbxMesh>(0))
    AssertSame(mesh2, obj.GetDstObject<FbxMesh>(1))
    AssertSame(mesh3, obj.GetDstObject<FbxMesh>(2))
    AssertSame(node, obj.GetDstObject<FbxNode>())
    AssertSame(node, obj.GetDstObject<FbxNode>(0))
    AssertSame(light, obj.GetDstObject<FbxLight>())
    AssertSame(light, obj.GetDstObject<FbxLight>(0))
    AssertSame(mesh1, obj.GetDstObject<FbxNodeAttribute>())
    AssertSame(mesh1, obj.GetDstObject<FbxNodeAttribute>(0))
    AssertSame(mesh2, obj.GetDstObject<FbxNodeAttribute>(1))
    AssertSame(mesh3, obj.GetDstObject<FbxNodeAttribute>(2))
    AssertSame(light, obj.GetDstObject<FbxNodeAttribute>(3))

    AssertEqual(null, obj.GetDstObject<FbxCamera>(0))


test FbxObject_TypedDisconnectAllDstObject_DisconnectsAllDstObjectOfThatType
    given
    FbxObject obj = new("asdf")
    FbxMesh mesh1 = new("mesh1")
    FbxNode node = new("node")
    FbxMesh mesh2 = new("mesh2")
    obj.ConnectDstObject(mesh1)
    obj.ConnectDstObject(node)
    obj.ConnectDstObject(mesh2)

    require
    AssertEqual(3, obj.GetDstObjectCount())
    AssertSame(mesh1, obj.GetDstObject(0))
    AssertSame(node, obj.GetDstObject(1))
    AssertSame(mesh2, obj.GetDstObject(2))

    AssertEqual(2, obj.GetDstObjectCount<FbxMesh>())
    AssertEqual(1, obj.GetDstObjectCount<FbxNode>())

    AssertEqual(1, mesh1.GetSrcObjectCount())
    AssertEqual(1, node.GetSrcObjectCount())
    AssertEqual(1, mesh2.GetSrcObjectCount())

    when
    bool ret = obj.DisconnectAllDstObject<FbxMesh>()

    then
    AssertTrue(ret)
    AssertEqual(1, obj.GetDstObjectCount())
    AssertSame(node, obj.GetDstObject())
    AssertSame(node, obj.GetDstObject(0))

    AssertEqual(0, obj.GetDstObjectCount<FbxMesh>())

    AssertEqual(1, obj.GetDstObjectCount<FbxNode>())
    AssertSame(node, obj.GetDstObject<FbxNode>())
    AssertSame(node, obj.GetDstObject<FbxNode>(0))

    AssertEqual(0, mesh1.GetSrcObjectCount())
    AssertEqual(1, node.GetSrcObjectCount())
    AssertEqual(0, mesh2.GetSrcObjectCount())

test FbxObject_TypedDisconnectAllDstObjectWithInheritance_DisconnectsAllDstObjectOfThatType
    given
    FbxObject obj = new("asdf")
    FbxMesh mesh1 = new("mesh1")
    FbxNode node = new("node")
    FbxLight light = new("light")
    obj.ConnectDstObject(mesh1)
    obj.ConnectDstObject(node)
    obj.ConnectDstObject(light)

    require
    AssertEqual(3, obj.GetDstObjectCount())
    AssertSame(mesh1, obj.GetDstObject(0))
    AssertSame(node, obj.GetDstObject(1))
    AssertSame(light, obj.GetDstObject(2))

    AssertEqual(1, obj.GetDstObjectCount<FbxMesh>())
    AssertEqual(1, obj.GetDstObjectCount<FbxNode>())
    AssertEqual(1, obj.GetDstObjectCount<FbxLight>())
    AssertEqual(2, obj.GetDstObjectCount<FbxNodeAttribute>())

    AssertEqual(1, mesh1.GetSrcObjectCount())
    AssertEqual(1, node.GetSrcObjectCount())
    AssertEqual(1, light.GetSrcObjectCount())

    when
    bool ret = obj.DisconnectAllDstObject<FbxNodeAttribute>()

    then
    AssertTrue(ret)
    AssertEqual(1, obj.GetDstObjectCount())
    AssertSame(node, obj.GetDstObject())
    AssertSame(node, obj.GetDstObject(0))

    AssertEqual(0, obj.GetDstObjectCount<FbxMesh>())
    AssertEqual(0, obj.GetDstObjectCount<FbxLight>())
    AssertEqual(0, obj.GetDstObjectCount<FbxNodeAttribute>())

    AssertEqual(1, obj.GetDstObjectCount<FbxNode>())
    AssertSame(node, obj.GetDstObject<FbxNode>())
    AssertSame(node, obj.GetDstObject<FbxNode>(0))

    AssertEqual(0, mesh1.GetSrcObjectCount())
    AssertEqual(1, node.GetSrcObjectCount())
    AssertEqual(0, light.GetSrcObjectCount())
